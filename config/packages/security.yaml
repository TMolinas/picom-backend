security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: 'auto'
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
#        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
#        entity_provider:
#            entity:
#                class: App\Entity\User
#                property: username
    firewalls:

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

#        api:
#            pattern:   ^/api
#            stateless: true
#            jwt: ~
#        login:
#            pattern:  ^/api/login
#            stateless: true
#            form_login:
#                check_path: login
#                login_path: login
#                provider: app_user_provider
#                success_handler: lexik_jwt_authentication.handler.authentication_success
#                failure_handler: lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false
#                username_parameter: email
#                password_parameter: password

        api:
            pattern:   ^/api
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
#            json_login:
#                check_path: login
#                username_path: security.credentials.login
#                password_path: security.credentials.password

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
